services:
  app:
    build:
      context: .
      args:
        NODE_ENV: ${DOCKER_NODE_ENV}
        BUILD_DATE: ${BUILD_DATE}
        GIT_COMMIT: ${GIT_COMMIT}
    env_file:
      - .env
    environment:
      NODE_ENV: ${DOCKER_NODE_ENV}
    ports:
      - "3000:3000"
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - /app/node_modules
    container_name: nextjs

  nginx:
    build: ./nginx
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN_NAMES=${DOCKER_DOMAIN_NAMES}
      - CERTIFICATION_EMAIL=${DOCKER_CERTIFICATION_EMAIL}
      - DOMAIN_PATH=${DOCKER_DOMAIN_PATH}
      - SERVER_NAMES=${DOCKER_SERVER_NAMES}
      - NODE_ENV=${DOCKER_NODE_ENV}
#    entrypoint:
#        - /bin/sh
#        - -c
#        - |
#          echo "0 */12 * * * certbot renew --webroot -w /var/www/certbot --quiet --post-hook 'nginx -s reload'" |
#            crontab - && crond -f
    volumes:
      - ./ssl-dhparams.pem:/etc/letsencrypt/ssl-dhparams.pem
      - ./nginx/nginx.conf.prod.template:/etc/nginx/nginx.conf.prod.template:ro
      - ./nginx/options-ssl-nginx.conf:/etc/letsencrypt/options-ssl-nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - app
    container_name: nginx

  certbot:
    image: certbot/certbot
    env_file:
      - .env
#    command: certonly --webroot --webroot-path=/var/www/certbot --email ${CERTIFICATION_EMAIL} --agree-tos --no-eff-email --staging --domains ${DOMAIN_NAMES} --non-interactive
#    entrypoint: "/bin/sh -c 'chmod +x /scripts/ssl_renewal.sh && /scripts/ssl_renewal.sh && crond -f'"
    entrypoint:
    - /bin/sh
    - -c
    - |
      certbot renew --webroot -w /var/www/certbot --quiet && 
      echo "0 */12 * * * certbot renew --webroot -w /var/www/certbot --quiet --post-hook 'docker exec -i nginx nginx -s reload'" |
        crontab - && crond -f
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./nginx:/scripts
      - /var/run/docker.sock:/var/run/docker.sock  # Add this to allow docker commands to be run inside the container
      - /usr/bin/docker:/usr/bin/docker:ro  # Add this to allow docker commands to be run inside the container. :ro at the end of a volume mount means a contianer can only read-only access the files in the volume.
    depends_on:
      - nginx
    container_name: certbot
